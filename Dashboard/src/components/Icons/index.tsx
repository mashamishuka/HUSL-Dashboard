export interface SVGProps {
  size?: number
  fill?: string
  clipPathFill?: string
}

export const GridView: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 18 18" fill="none">
      <path
        d="M0.5 8V0.5H8V8H0.5ZM0.5 17.5V10H8V17.5H0.5ZM10 8V0.5H17.5V8H10ZM10 17.5V10H17.5V17.5H10ZM2 6.5H6.5V2H2V6.5ZM11.5 6.5H16V2H11.5V6.5ZM11.5 16H16V11.5H11.5V16ZM2 16H6.5V11.5H2V16Z"
        fill={fill}
      />
    </svg>
  )
}

export const ManageAccount: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 19 17" fill="none">
      <path
        d="M8 7.7C7.03333 7.7 6.20833 7.354 5.525 6.662C4.84167 5.97066 4.5 5.15 4.5 4.2C4.5 3.23333 4.84167 2.40833 5.525 1.725C6.20833 1.04166 7.03333 0.699997 8 0.699997C8.96667 0.699997 9.79167 1.04166 10.475 1.725C11.1583 2.40833 11.5 3.23333 11.5 4.2C11.5 5.15 11.1583 5.97066 10.475 6.662C9.79167 7.354 8.96667 7.7 8 7.7ZM0.5 15.3V13.075C0.5 12.575 0.629333 12.1207 0.888 11.712C1.146 11.304 1.50833 10.9833 1.975 10.75C2.79167 10.35 3.68333 10.0083 4.65 9.725C5.61667 9.44166 6.73333 9.3 8 9.3H8.3C8.38333 9.3 8.46667 9.31666 8.55 9.35C8.45 9.58333 8.36667 9.82066 8.3 10.062C8.23333 10.304 8.18333 10.55 8.15 10.8H8C6.85 10.8 5.82933 10.9333 4.938 11.2C4.046 11.4667 3.28333 11.7667 2.65 12.1C2.43333 12.2167 2.27067 12.3583 2.162 12.525C2.054 12.6917 2 12.875 2 13.075V13.8H8.3C8.36667 14.0667 8.46267 14.329 8.588 14.587C8.71267 14.8457 8.84167 15.0833 8.975 15.3H0.5ZM14.1 16.05L13.875 14.725C13.6417 14.6583 13.421 14.5667 13.213 14.45C13.0043 14.3333 12.8 14.1917 12.6 14.025L11.35 14.45L10.625 13.25L11.675 12.4C11.5917 12.1333 11.55 11.875 11.55 11.625C11.55 11.375 11.5917 11.125 11.675 10.875L10.65 10L11.35 8.8L12.6 9.25C12.7833 9.06666 12.9833 8.92066 13.2 8.812C13.4167 8.704 13.6417 8.61666 13.875 8.55L14.1 7.225H15.525L15.75 8.55C15.9833 8.61666 16.2083 8.70833 16.425 8.825C16.6417 8.94166 16.8417 9.09166 17.025 9.275L18.275 8.8L18.975 10.025L17.95 10.9C18.0333 11.1333 18.075 11.3833 18.075 11.65C18.075 11.9167 18.0333 12.1667 17.95 12.4L19 13.25L18.275 14.45L17.025 14.025C16.825 14.1917 16.621 14.3333 16.413 14.45C16.2043 14.5667 15.9833 14.6583 15.75 14.725L15.525 16.05H14.1ZM14.8 13.55C15.3333 13.55 15.7833 13.3627 16.15 12.988C16.5167 12.6127 16.7 12.1583 16.7 11.625C16.7 11.1083 16.5167 10.6623 16.15 10.287C15.7833 9.91233 15.3333 9.725 14.8 9.725C14.2833 9.725 13.8377 9.91233 13.463 10.287C13.0877 10.6623 12.9 11.1083 12.9 11.625C12.9 12.1583 13.0877 12.6127 13.463 12.988C13.8377 13.3627 14.2833 13.55 14.8 13.55ZM8 6.2C8.55 6.2 9.021 6.004 9.413 5.612C9.80433 5.22066 10 4.75 10 4.2C10 3.65 9.80433 3.179 9.413 2.787C9.021 2.39566 8.55 2.2 8 2.2C7.45 2.2 6.97933 2.39566 6.588 2.787C6.196 3.179 6 3.65 6 4.2C6 4.75 6.196 5.22066 6.588 5.612C6.97933 6.004 7.45 6.2 8 6.2Z"
        fill={fill}
      />
    </svg>
  )
}

export const Products: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 19 17" fill="none">
      <path
        d="M8 7.7C7.03333 7.7 6.20833 7.354 5.525 6.662C4.84167 5.97066 4.5 5.15 4.5 4.2C4.5 3.23333 4.84167 2.40833 5.525 1.725C6.20833 1.04166 7.03333 0.699997 8 0.699997C8.96667 0.699997 9.79167 1.04166 10.475 1.725C11.1583 2.40833 11.5 3.23333 11.5 4.2C11.5 5.15 11.1583 5.97066 10.475 6.662C9.79167 7.354 8.96667 7.7 8 7.7ZM0.5 15.3V13.075C0.5 12.575 0.629333 12.1207 0.888 11.712C1.146 11.304 1.50833 10.9833 1.975 10.75C2.79167 10.35 3.68333 10.0083 4.65 9.725C5.61667 9.44166 6.73333 9.3 8 9.3H8.3C8.38333 9.3 8.46667 9.31666 8.55 9.35C8.45 9.58333 8.36667 9.82066 8.3 10.062C8.23333 10.304 8.18333 10.55 8.15 10.8H8C6.85 10.8 5.82933 10.9333 4.938 11.2C4.046 11.4667 3.28333 11.7667 2.65 12.1C2.43333 12.2167 2.27067 12.3583 2.162 12.525C2.054 12.6917 2 12.875 2 13.075V13.8H8.3C8.36667 14.0667 8.46267 14.329 8.588 14.587C8.71267 14.8457 8.84167 15.0833 8.975 15.3H0.5ZM14.1 16.05L13.875 14.725C13.6417 14.6583 13.421 14.5667 13.213 14.45C13.0043 14.3333 12.8 14.1917 12.6 14.025L11.35 14.45L10.625 13.25L11.675 12.4C11.5917 12.1333 11.55 11.875 11.55 11.625C11.55 11.375 11.5917 11.125 11.675 10.875L10.65 10L11.35 8.8L12.6 9.25C12.7833 9.06666 12.9833 8.92066 13.2 8.812C13.4167 8.704 13.6417 8.61666 13.875 8.55L14.1 7.225H15.525L15.75 8.55C15.9833 8.61666 16.2083 8.70833 16.425 8.825C16.6417 8.94166 16.8417 9.09166 17.025 9.275L18.275 8.8L18.975 10.025L17.95 10.9C18.0333 11.1333 18.075 11.3833 18.075 11.65C18.075 11.9167 18.0333 12.1667 17.95 12.4L19 13.25L18.275 14.45L17.025 14.025C16.825 14.1917 16.621 14.3333 16.413 14.45C16.2043 14.5667 15.9833 14.6583 15.75 14.725L15.525 16.05H14.1ZM14.8 13.55C15.3333 13.55 15.7833 13.3627 16.15 12.988C16.5167 12.6127 16.7 12.1583 16.7 11.625C16.7 11.1083 16.5167 10.6623 16.15 10.287C15.7833 9.91233 15.3333 9.725 14.8 9.725C14.2833 9.725 13.8377 9.91233 13.463 10.287C13.0877 10.6623 12.9 11.1083 12.9 11.625C12.9 12.1583 13.0877 12.6127 13.463 12.988C13.8377 13.3627 14.2833 13.55 14.8 13.55ZM8 6.2C8.55 6.2 9.021 6.004 9.413 5.612C9.80433 5.22066 10 4.75 10 4.2C10 3.65 9.80433 3.179 9.413 2.787C9.021 2.39566 8.55 2.2 8 2.2C7.45 2.2 6.97933 2.39566 6.588 2.787C6.196 3.179 6 3.65 6 4.2C6 4.75 6.196 5.22066 6.588 5.612C6.97933 6.004 7.45 6.2 8 6.2Z"
        fill={fill}
      />
    </svg>
  )
}

export const ForkLeft: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 14 18" fill="none">
      <path
        d="M9.25001 17.75V13.95C8.93334 12.8167 8.37067 11.9707 7.56201 11.412C6.75401 10.854 5.87501 10.575 4.92501 10.575C4.64167 10.575 4.35401 10.5917 4.06201 10.625C3.77067 10.6583 3.49167 10.7 3.22501 10.75L5.07501 12.6L4.00001 13.65L0.350006 10L4.00001 6.35001L5.07501 7.40001L3.22501 9.25001C3.47501 9.20001 3.73334 9.16234 4.00001 9.13701C4.26667 9.11234 4.55001 9.10001 4.85001 9.10001C5.70001 9.10001 6.50401 9.25834 7.26201 9.57501C8.02067 9.89167 8.68334 10.3833 9.25001 11.05V3.22501L7.40001 5.07501L6.35001 4.00001L10 0.350006L13.65 4.00001L12.6 5.07501L10.75 3.22501V17.75H9.25001Z"
        fill={fill}
      />
    </svg>
  )
}

export const AccountTree: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 20 18" fill="none">
      <path
        d="M13.25 17.75V14.75H9.25V4.75H6.75V7.75H0.25V0.25H6.75V3.25H13.25V0.25H19.75V7.75H13.25V4.75H10.75V13.25H13.25V10.25H19.75V17.75H13.25ZM14.75 6.25H18.25V1.75H14.75V6.25ZM14.75 16.25H18.25V11.75H14.75V16.25ZM1.75 6.25H5.25V1.75H1.75V6.25Z"
        fill={fill}
      />
    </svg>
  )
}

export const Article: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 18 18" fill="none">
      <path
        d="M4.25 13.75H10.75V12.25H4.25V13.75ZM4.25 9.75H13.75V8.25H4.25V9.75ZM4.25 5.75H13.75V4.25H4.25V5.75ZM2.3 17.5C1.8 17.5 1.375 17.325 1.025 16.975C0.675 16.625 0.5 16.2 0.5 15.7V2.3C0.5 1.8 0.675 1.375 1.025 1.025C1.375 0.675 1.8 0.5 2.3 0.5H15.7C16.2 0.5 16.625 0.675 16.975 1.025C17.325 1.375 17.5 1.8 17.5 2.3V15.7C17.5 16.2 17.325 16.625 16.975 16.975C16.625 17.325 16.2 17.5 15.7 17.5H2.3ZM2.3 16H15.7C15.7667 16 15.8333 15.9667 15.9 15.9C15.9667 15.8333 16 15.7667 16 15.7V2.3C16 2.23333 15.9667 2.16667 15.9 2.1C15.8333 2.03333 15.7667 2 15.7 2H2.3C2.23333 2 2.16667 2.03333 2.1 2.1C2.03333 2.16667 2 2.23333 2 2.3V15.7C2 15.7667 2.03333 15.8333 2.1 15.9C2.16667 15.9667 2.23333 16 2.3 16Z"
        fill={fill}
      />
    </svg>
  )
}

export const Handshake: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 22 20" fill="none">
      <path
        d="M10.8 17.975C10.8833 17.975 10.9793 17.95 11.088 17.9C11.196 17.85 11.275 17.8 11.325 17.75L19.325 9.75C19.5583 9.51667 19.729 9.275 19.837 9.025C19.9457 8.775 20 8.50833 20 8.225C20 7.925 19.9457 7.64167 19.837 7.375C19.729 7.10833 19.5583 6.86667 19.325 6.65L15.325 2.65C15.1083 2.41667 14.875 2.25 14.625 2.15C14.375 2.05 14.1083 2 13.825 2C13.5417 2 13.2667 2.05 13 2.15C12.7333 2.25 12.4917 2.41667 12.275 2.65L11.7 3.225L13.55 5.075C13.7833 5.29167 13.954 5.53733 14.062 5.812C14.1707 6.08733 14.225 6.375 14.225 6.675C14.225 7.275 14.021 7.77933 13.613 8.188C13.2043 8.596 12.6917 8.8 12.075 8.8C11.775 8.8 11.4877 8.754 11.213 8.662C10.9377 8.57067 10.6917 8.41667 10.475 8.2L8.6 6.325L4.25 10.65C4.16666 10.7333 4.10833 10.8207 4.075 10.912C4.04166 11.004 4.025 11.1 4.025 11.2C4.025 11.3833 4.08766 11.5417 4.213 11.675C4.33766 11.8083 4.49166 11.875 4.675 11.875C4.775 11.875 4.875 11.85 4.975 11.8C5.075 11.75 5.15833 11.7 5.225 11.65L8.5 8.35L9.55 9.425L6.275 12.7C6.20833 12.7667 6.15433 12.85 6.113 12.95C6.071 13.05 6.05 13.15 6.05 13.25C6.05 13.4167 6.11666 13.5667 6.25 13.7C6.38333 13.8333 6.53333 13.9 6.7 13.9C6.8 13.9 6.90433 13.875 7.013 13.825C7.121 13.775 7.2 13.725 7.25 13.675L10.65 10.275L11.7 11.325L8.325 14.725C8.25833 14.7917 8.204 14.875 8.162 14.975C8.12066 15.075 8.1 15.175 8.1 15.275C8.1 15.4583 8.16233 15.6127 8.287 15.738C8.41233 15.8627 8.56666 15.925 8.75 15.925C8.85 15.925 8.946 15.9083 9.038 15.875C9.12933 15.8417 9.21667 15.7833 9.3 15.7L12.7 12.325L13.75 13.375L10.35 16.775C10.2667 16.8583 10.2083 16.95 10.175 17.05C10.1417 17.15 10.125 17.2417 10.125 17.325C10.125 17.5083 10.1917 17.6627 10.325 17.788C10.4583 17.9127 10.6167 17.975 10.8 17.975ZM10.775 19.475C10.2083 19.475 9.71667 19.2793 9.3 18.888C8.88333 18.496 8.65833 18.0083 8.625 17.425C8.05833 17.375 7.58767 17.1707 7.213 16.812C6.83767 16.454 6.63333 15.975 6.6 15.375C6 15.3417 5.51666 15.1373 5.15 14.762C4.78333 14.3873 4.59166 13.9167 4.575 13.35C3.975 13.3 3.48333 13.0793 3.1 12.688C2.71666 12.296 2.525 11.8 2.525 11.2C2.525 10.9 2.57933 10.6083 2.688 10.325C2.796 10.0417 2.95833 9.8 3.175 9.6L8.6 4.2L11.525 7.125C11.575 7.19167 11.65 7.24567 11.75 7.287C11.85 7.329 11.9583 7.35 12.075 7.35C12.2417 7.35 12.3917 7.28733 12.525 7.162C12.6583 7.03733 12.725 6.88333 12.725 6.7C12.725 6.58333 12.7043 6.479 12.663 6.387C12.621 6.29567 12.5667 6.21667 12.5 6.15L9 2.65C8.78333 2.41667 8.546 2.25 8.288 2.15C8.02933 2.05 7.75833 2 7.475 2C7.19167 2 6.925 2.05 6.675 2.15C6.425 2.25 6.18333 2.41667 5.95 2.65L2.675 5.95C2.49166 6.13333 2.34166 6.34567 2.225 6.587C2.10833 6.829 2.04166 7.08333 2.025 7.35C1.99166 7.56667 1.996 7.779 2.038 7.987C2.07933 8.19567 2.15 8.39167 2.25 8.575L1.15 9.675C0.916665 9.34167 0.745998 8.975 0.637998 8.575C0.529331 8.175 0.483331 7.76667 0.499998 7.35C0.516665 6.88333 0.620665 6.43733 0.811998 6.012C1.004 5.58733 1.26666 5.20833 1.6 4.875L4.875 1.6C5.24166 1.23333 5.646 0.958333 6.088 0.775C6.52933 0.591667 6.99167 0.5 7.475 0.5C7.95833 0.5 8.421 0.591667 8.863 0.775C9.30433 0.958333 9.70833 1.23333 10.075 1.6L10.65 2.15L11.225 1.6C11.5917 1.23333 11.9917 0.958333 12.425 0.775C12.8583 0.591667 13.325 0.5 13.825 0.5C14.3083 0.5 14.7667 0.591667 15.2 0.775C15.6333 0.958333 16.0333 1.23333 16.4 1.6L20.375 5.575C20.7417 5.925 21.0207 6.33333 21.212 6.8C21.404 7.26667 21.5 7.74167 21.5 8.225C21.5 8.70833 21.404 9.17067 21.212 9.612C21.0207 10.054 20.7417 10.4583 20.375 10.825L12.375 18.8C12.1583 19.0167 11.9127 19.1833 11.638 19.3C11.3627 19.4167 11.075 19.475 10.775 19.475Z"
        fill={fill}
      />
    </svg>
  )
}

export const Logo: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 29 23" fill="none">
      <path
        d="M28.9975 15.3439C28.9266 13.2338 26.5274 11.9605 25.154 11.7645C23.7806 11.5685 22.2005 11.9891 22.144 12.5737C22.0876 13.1578 22.617 14.4137 23.03 14.4679C23.443 14.5221 24.1637 14.2148 24.9393 14.6102C25.7149 15.0056 26.4285 16.1913 25.1605 17.1476C23.8925 18.1044 21.3475 16.8413 20.6163 16.4565C20.5474 16.4202 20.4745 16.3835 20.4006 16.3462C19.1291 15.6265 19.2819 14.7985 19.4862 14.2981C20.453 11.9808 23.5474 5.00494 23.9175 4.06072C24.3549 2.94518 24.4239 2.45444 24.2166 2.23133C24.0094 2.00822 23.2038 2.09727 22.4901 2.09727C21.7765 2.09727 21.2241 1.80737 20.8556 2.32038C20.4875 2.83338 16.1825 13.5189 15.9523 13.8533C15.7221 14.1877 15.5148 14.3218 15.1008 14.1432C14.6863 13.9646 13.2824 13.1617 13.0522 13.0054C12.822 12.8491 12.776 12.5814 13.1441 11.6667C13.5122 10.752 16.5511 3.79212 16.7813 3.30138C17.0116 2.81064 18.1123 2.40798 18.1163 2.14131C18.1163 2.14131 18.2546 0.0442863 17.0575 -0.000238566C15.8604 -0.0447634 14.8935 1.02577 14.1339 1.38294C13.3743 1.73962 12.0159 1.42601 10.1516 1.06981C8.28679 0.713611 6.23819 0.132368 3.82152 1.06981C1.40435 2.00725 0.737136 4.79586 1.33543 6.82562C1.93373 8.85537 4.58113 9.5247 5.96251 9.39112C7.34389 9.25706 8.77072 8.47643 8.67883 7.89664C8.58693 7.31684 7.75791 6.22356 7.34389 6.26809C6.92938 6.31261 6.3081 6.78109 5.4561 6.58025C4.6046 6.3794 3.61476 5.39792 4.6046 4.17106C5.59444 2.94421 8.37968 3.56901 9.18523 3.76937C9.99079 3.97022 11.119 4.1488 11.6254 4.19333C12.1318 4.23785 12.5463 4.4387 12.385 4.84039C12.2237 5.24208 9.94484 10.8411 9.87592 10.9974C9.807 11.1537 9.48438 11.2873 9.23118 11.2205C8.97797 11.1537 6.42297 10.15 3.70665 10.752C0.990339 11.3541 -0.920421 14.3658 0.46096 17.1767C1.84234 19.9876 5.64039 19.8903 7.41281 19.1803C9.18523 18.4703 10.3594 17.0204 10.9347 16.1952C11.51 15.37 11.7173 15.2805 11.9475 15.3923C12.1777 15.5036 14.3876 16.5301 14.5719 16.7532C14.7562 16.9763 14.4571 17.6006 14.3417 17.9133C14.2268 18.2254 13.0527 20.7464 13.0068 20.9695C12.9608 21.1926 13.191 21.5943 13.7664 22.0401C14.3417 22.4863 15.1243 22.9993 15.3545 22.9993C15.5847 22.9993 16.0222 22.8652 16.2524 22.2186C16.4322 21.7134 17.2018 19.8337 17.5739 18.9175C17.8211 18.3571 18.9353 18.8193 19.2045 18.9407C20.866 19.7127 22.6624 20.6656 25.1405 20.3399C27.7205 20.0011 29.0679 17.454 28.9975 15.3439ZM6.79104 16.1516C5.68633 16.91 3.79855 16.9768 3.33809 15.7277C2.87763 14.4786 3.82152 13.3185 5.50205 13.2517C7.18258 13.1849 8.18091 13.6984 8.28728 13.8765C8.54049 14.3 7.89624 15.3933 6.79104 16.1516Z"
        fill={fill}
      />
    </svg>
  )
}

export const Search: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 24 24" fill="none">
      <path
        d="M23.7068 22.2938L17.7378 16.3248C19.3644 14.3354 20.1642 11.7969 19.9716 9.23432C19.7791 6.67179 18.609 4.28129 16.7034 2.55728C14.7977 0.833269 12.3024 -0.0923492 9.73342 -0.0281174C7.16447 0.0361144 4.71849 1.08528 2.9014 2.90237C1.08431 4.71946 0.0351379 7.16545 -0.029094 9.7344C-0.0933258 12.3034 0.832293 14.7987 2.5563 16.7043C4.28031 18.61 6.67081 19.7801 9.23334 19.9726C11.7959 20.1651 14.3344 19.3654 16.3238 17.7388L22.2928 23.7078C22.4814 23.8899 22.734 23.9907 22.9962 23.9884C23.2584 23.9862 23.5092 23.881 23.6946 23.6956C23.88 23.5102 23.9852 23.2594 23.9875 22.9972C23.9897 22.735 23.8889 22.4824 23.7068 22.2938ZM9.99978 18.0008C8.41753 18.0008 6.87081 17.5316 5.55522 16.6525C4.23963 15.7735 3.21425 14.524 2.60875 13.0622C2.00324 11.6004 1.84482 9.99189 2.1535 8.44004C2.46218 6.88819 3.22411 5.46272 4.34293 4.3439C5.46175 3.22508 6.88721 2.46316 8.43906 2.15448C9.99091 1.84579 11.5994 2.00422 13.0613 2.60972C14.5231 3.21522 15.7725 4.2406 16.6515 5.5562C17.5306 6.87179 17.9998 8.41851 17.9998 10.0008C17.9974 12.1218 17.1538 14.1552 15.654 15.655C14.1542 17.1548 12.1208 17.9984 9.99978 18.0008Z"
        fill={fill}
      />
    </svg>
  )
}

export const Bell: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 24 24" fill="none">
      <path
        d="M23.2589 16.1999L20.6589 6.82893C20.1037 4.82435 18.894 3.06307 17.2222 1.82542C15.5504 0.587761 13.5127 -0.055148 11.4334 -0.000988358C9.35404 0.0531713 7.35257 0.801287 5.7475 2.12429C4.14243 3.4473 3.02601 5.26916 2.57592 7.29993L0.564915 16.3499C0.467608 16.7884 0.469982 17.2431 0.571861 17.6805C0.67374 18.1179 0.872525 18.5268 1.15355 18.8771C1.43457 19.2275 1.79067 19.5102 2.19556 19.7045C2.60045 19.8989 3.04381 19.9998 3.49292 19.9999H7.09992C7.32943 21.1302 7.94265 22.1464 8.83566 22.8763C9.72867 23.6062 10.8466 24.0049 11.9999 24.0049C13.1533 24.0049 14.2712 23.6062 15.1642 22.8763C16.0572 22.1464 16.6704 21.1302 16.8999 19.9999H20.3699C20.832 19.9997 21.2878 19.8928 21.7018 19.6874C22.1158 19.482 22.4767 19.1838 22.7564 18.816C23.0362 18.4482 23.2271 18.0207 23.3145 17.5669C23.4018 17.1131 23.3831 16.6453 23.2599 16.1999H23.2589ZM11.9999 21.9999C11.3817 21.9974 10.7793 21.8038 10.2752 21.4458C9.77115 21.0878 9.39 20.5828 9.18392 19.9999H14.8159C14.6098 20.5828 14.2287 21.0878 13.7246 21.4458C13.2205 21.8038 12.6182 21.9974 11.9999 21.9999ZM21.1649 17.6049C21.0716 17.7286 20.9507 17.8288 20.8118 17.8973C20.6729 17.9659 20.5198 18.0011 20.3649 17.9999H3.49292C3.34318 17.9999 3.19536 17.9663 3.06036 17.9015C2.92537 17.8367 2.80665 17.7424 2.71297 17.6256C2.61929 17.5087 2.55304 17.3724 2.5191 17.2265C2.48517 17.0807 2.48442 16.9291 2.51692 16.7829L4.52792 7.73293C4.88227 6.13914 5.75922 4.70953 7.01937 3.67138C8.27952 2.63322 9.85054 2.0461 11.4827 2.00334C13.1148 1.96058 14.7144 2.46465 16.0272 3.4354C17.34 4.40615 18.2906 5.78787 18.7279 7.36093L21.3279 16.7319C21.3704 16.8801 21.3777 17.0361 21.3494 17.1877C21.3212 17.3392 21.258 17.482 21.1649 17.6049Z"
        fill={fill}
      />
    </svg>
  )
}

export const InfoRounded: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 20 20" fill="none">
      <path
        d="M9.25 14.75H10.75V9H9.25V14.75ZM10 7.3C10.2333 7.3 10.425 7.22067 10.575 7.062C10.725 6.904 10.8 6.70833 10.8 6.475C10.8 6.25833 10.725 6.07067 10.575 5.912C10.425 5.754 10.2333 5.675 10 5.675C9.76667 5.675 9.575 5.754 9.425 5.912C9.275 6.07067 9.2 6.25833 9.2 6.475C9.2 6.70833 9.275 6.904 9.425 7.062C9.575 7.22067 9.76667 7.3 10 7.3ZM10 19.5C8.68333 19.5 7.446 19.25 6.288 18.75C5.12933 18.25 4.125 17.575 3.275 16.725C2.425 15.875 1.75 14.8707 1.25 13.712C0.75 12.554 0.5 11.3167 0.5 10C0.5 8.68333 0.75 7.44567 1.25 6.287C1.75 5.129 2.425 4.125 3.275 3.275C4.125 2.425 5.12933 1.75 6.288 1.25C7.446 0.75 8.68333 0.5 10 0.5C11.3167 0.5 12.5543 0.75 13.713 1.25C14.871 1.75 15.875 2.425 16.725 3.275C17.575 4.125 18.25 5.129 18.75 6.287C19.25 7.44567 19.5 8.68333 19.5 10C19.5 11.3167 19.25 12.554 18.75 13.712C18.25 14.8707 17.575 15.875 16.725 16.725C15.875 17.575 14.871 18.25 13.713 18.75C12.5543 19.25 11.3167 19.5 10 19.5ZM10 18C12.2333 18 14.125 17.225 15.675 15.675C17.225 14.125 18 12.2333 18 10C18 7.76667 17.225 5.875 15.675 4.325C14.125 2.775 12.2333 2 10 2C7.76667 2 5.875 2.775 4.325 4.325C2.775 5.875 2 7.76667 2 10C2 12.2333 2.775 14.125 4.325 15.675C5.875 17.225 7.76667 18 10 18Z"
        fill={fill}
      />
    </svg>
  )
}

export const ArrowRight: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size / 2} viewBox="0 0 24 10" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M23.0676 4.9928L18.8178 0.757324L17.406 2.17392L19.2414 4.00313L0.932347 4.00113L0.932129 6.00113L19.2368 6.00313L17.4153 7.83075L18.8319 9.24258L23.0676 4.9928Z"
        fill={fill}
      />
    </svg>
  )
}

export const Twitter: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 20 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M19.1668 1.50838C19.1668 1.50838 17.4852 2.50171 16.5502 2.78338C16.0483 2.20631 15.3813 1.79729 14.6394 1.61165C13.8974 1.42601 13.1164 1.47271 12.4019 1.74542C11.6874 2.01814 11.0739 2.50371 10.6443 3.13648C10.2148 3.76924 9.98991 4.51866 10.0002 5.28338V6.11671C8.53569 6.15469 7.08456 5.82989 5.776 5.17125C4.46745 4.51261 3.34209 3.54058 2.50016 2.34171C2.50016 2.34171 -0.83317 9.84171 6.66683 13.175C4.9506 14.34 2.90613 14.9242 0.833496 14.8417C8.3335 19.0084 17.5002 14.8417 17.5002 5.25838C17.5002 5.02671 17.4768 4.79505 17.4335 4.56671C18.2835 3.72838 19.1668 1.50838 19.1668 1.50838Z"
        stroke={fill}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const Instagram: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.00033 0.666748C6.73699 0.666748 6.45366 0.676748 5.56449 0.716748C4.67783 0.757581 4.07199 0.898415 3.54199 1.10425C2.98573 1.31329 2.48179 1.64119 2.06533 2.06508C1.64146 2.48156 1.31355 2.9855 1.10449 3.54175C0.898659 4.07175 0.757825 4.67758 0.716992 5.56425C0.676159 6.45341 0.666992 6.73675 0.666992 9.00008C0.666992 11.2634 0.676159 11.5467 0.716992 12.4359C0.757825 13.3226 0.898659 13.9284 1.10449 14.4584C1.31358 15.0147 1.64148 15.5186 2.06533 15.9351C2.48182 16.3589 2.98576 16.6868 3.54199 16.8959C4.07199 17.1017 4.67783 17.2426 5.56449 17.2834C6.45366 17.3234 6.73699 17.3334 9.00033 17.3334C11.2637 17.3334 11.547 17.3234 12.4362 17.2834C13.3228 17.2426 13.9287 17.1017 14.4587 16.8959C15.0149 16.6869 15.5188 16.359 15.9353 15.9351C16.3592 15.5186 16.6871 15.0147 16.8962 14.4584C17.102 13.9284 17.2428 13.3226 17.2837 12.4359C17.3237 11.5467 17.3337 11.2634 17.3337 9.00008C17.3337 6.73675 17.3237 6.45341 17.2837 5.56425C17.2428 4.67758 17.102 4.07175 16.8962 3.54175C16.6871 2.9855 16.3592 2.48156 15.9353 2.06508C15.5189 1.64119 15.0149 1.31329 14.4587 1.10425C13.9287 0.898415 13.3228 0.757581 12.4362 0.716748C11.547 0.676748 11.2637 0.666748 9.00033 0.666748ZM9.00033 2.16841C11.2253 2.16841 11.4887 2.17675 12.367 2.21675C13.1803 2.25425 13.6212 2.38925 13.9153 2.50341C14.3037 2.65508 14.582 2.83591 14.8737 3.12675C15.1653 3.41842 15.3453 3.69675 15.497 4.08508C15.6103 4.37925 15.747 4.82008 15.7837 5.63258C15.8237 6.51175 15.832 6.77425 15.832 9.00008C15.832 11.2251 15.8237 11.4884 15.7837 12.3667C15.7462 13.1801 15.6103 13.6209 15.497 13.9151C15.3634 14.2771 15.1504 14.6045 14.8737 14.8734C14.582 15.1651 14.3037 15.3451 13.9153 15.4967C13.6212 15.6101 13.1803 15.7467 12.3678 15.7834C11.4895 15.8234 11.2262 15.8317 9.00033 15.8317C6.77533 15.8317 6.51116 15.8234 5.63366 15.7834C4.82033 15.7459 4.37949 15.6101 4.08533 15.4967C3.72331 15.3632 3.39584 15.1502 3.12699 14.8734C2.85021 14.6046 2.63721 14.2771 2.50366 13.9151C2.38949 13.6209 2.25366 13.1801 2.21699 12.3676C2.17699 11.4884 2.16866 11.2259 2.16866 9.00008C2.16866 6.77508 2.17699 6.51175 2.21699 5.63341C2.25449 4.82008 2.38949 4.37925 2.50366 4.08508C2.65533 3.69675 2.83616 3.41842 3.12699 3.12675C3.41866 2.83508 3.69699 2.65508 4.08533 2.50341C4.37949 2.38925 4.82033 2.25341 5.63283 2.21675C6.51199 2.17675 6.77449 2.16841 9.00033 2.16841ZM9.00033 11.7776C8.26369 11.7776 7.55722 11.485 7.03634 10.9641C6.51545 10.4432 6.22283 9.73672 6.22283 9.00008C6.22283 8.26344 6.51545 7.55697 7.03634 7.03609C7.55722 6.51521 8.26369 6.22258 9.00033 6.22258C9.73697 6.22258 10.4434 6.51521 10.9643 7.03609C11.4852 7.55697 11.7778 8.26344 11.7778 9.00008C11.7778 9.73672 11.4852 10.4432 10.9643 10.9641C10.4434 11.485 9.73697 11.7776 9.00033 11.7776ZM9.00033 4.72091C8.43838 4.72091 7.88193 4.8316 7.36276 5.04665C6.84359 5.2617 6.37185 5.5769 5.9745 5.97425C5.57714 6.37161 5.26194 6.84334 5.04689 7.36252C4.83184 7.88169 4.72116 8.43813 4.72116 9.00008C4.72116 9.56203 4.83184 10.1185 5.04689 10.6376C5.26194 11.1568 5.57714 11.6286 5.9745 12.0259C6.37185 12.4233 6.84359 12.7385 7.36276 12.9535C7.88193 13.1686 8.43838 13.2792 9.00033 13.2792C10.1352 13.2792 11.2237 12.8284 12.0262 12.0259C12.8287 11.2234 13.2795 10.135 13.2795 9.00008C13.2795 7.86518 12.8287 6.77675 12.0262 5.97425C11.2237 5.17175 10.1352 4.72091 9.00033 4.72091ZM14.4487 4.55175C14.4487 4.68307 14.4228 4.81311 14.3725 4.93443C14.3223 5.05576 14.2486 5.166 14.1558 5.25885C14.0629 5.35171 13.9527 5.42537 13.8313 5.47563C13.71 5.52588 13.58 5.55175 13.4487 5.55175C13.3173 5.55175 13.1873 5.52588 13.066 5.47563C12.9447 5.42537 12.8344 5.35171 12.7416 5.25885C12.6487 5.166 12.575 5.05576 12.5248 4.93443C12.4745 4.81311 12.4487 4.68307 12.4487 4.55175C12.4487 4.28653 12.554 4.03218 12.7416 3.84464C12.9291 3.6571 13.1834 3.55175 13.4487 3.55175C13.7139 3.55175 13.9682 3.6571 14.1558 3.84464C14.3433 4.03218 14.4487 4.28653 14.4487 4.55175Z"
        fill={fill}
      />
    </svg>
  )
}

export const Facebook: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 12 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M7.36214 1.57229C7.43651 1.57229 7.4793 1.57541 7.4793 1.57541H9.11149L9.10308 3.45041H7.48182C6.58964 3.45041 6.61026 4.21227 6.61026 4.21227V7.18477H9.76714L9.32651 9.05727H6.59995V18.4279H4.72683L4.72558 9.05727H2.23714L2.23214 7.18477H4.72651V4.27102C4.72679 1.73039 6.83683 1.57227 7.36214 1.57227V1.57229ZM9.11149 1.57539H9.11462H9.11149ZM7.36214 0.322266C6.91276 0.322266 6.0346 0.39666 5.20272 0.89791C4.41522 1.37166 3.47679 2.34195 3.47679 4.27072V5.93445H2.23241C1.90022 5.93445 1.58179 6.06695 1.34679 6.30197C1.23068 6.41855 1.13872 6.5569 1.0762 6.70909C1.01367 6.86128 0.981809 7.02432 0.982431 7.18885L0.987431 9.06135C0.989931 9.74979 1.54899 10.307 2.23743 10.307H3.47587L3.47712 18.4276C3.47712 19.1179 4.03682 19.6776 4.72712 19.6776H6.60026C7.29056 19.6776 7.85026 19.1179 7.85026 18.4276V10.307H9.32683C9.88151 10.307 10.3699 9.94135 10.5262 9.40918L10.9668 7.53666C11.0777 7.15887 11.004 6.75043 10.7677 6.43572C10.6515 6.2801 10.5005 6.15376 10.3269 6.06674C10.1532 5.97972 9.96165 5.93443 9.76741 5.93447H7.86054V4.70104L9.10335 4.70041C9.79116 4.70041 10.3502 4.14447 10.3533 3.45604L10.3618 1.64447C10.363 1.62147 10.3637 1.59844 10.3637 1.57541C10.3637 0.885098 9.80522 0.32541 9.11493 0.32541H7.51462C7.47868 0.323535 7.42681 0.322285 7.36214 0.322266Z"
        fill={fill}
      />
    </svg>
  )
}

export const Tiktok: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M15.5 5.09375C14.464 5.09375 13.4704 4.6822 12.7379 3.94964C12.0053 3.21707 11.5937 2.2235 11.5937 1.1875C11.5937 1.06318 11.5444 0.943951 11.4565 0.856044C11.3685 0.768136 11.2493 0.71875 11.125 0.71875H8C7.87568 0.71875 7.75645 0.768136 7.66854 0.856044C7.58063 0.943951 7.53125 1.06318 7.53125 1.1875V11.1875C7.53112 11.4952 7.44841 11.7971 7.29175 12.0619C7.1351 12.3267 6.91024 12.5446 6.64066 12.6928C6.37107 12.8411 6.06663 12.9142 5.75912 12.9047C5.45161 12.8951 5.1523 12.8032 4.89244 12.6385C4.63257 12.4738 4.42168 12.2424 4.28176 11.9684C4.14185 11.6944 4.07805 11.3879 4.09702 11.0808C4.11599 10.7737 4.21703 10.4774 4.38961 10.2227C4.56218 9.96797 4.79996 9.76427 5.07812 9.63281C5.1576 9.5946 5.22468 9.53474 5.27167 9.46012C5.31866 9.38549 5.34364 9.29912 5.34375 9.21094V5.96094C5.34355 5.89186 5.32834 5.82365 5.29916 5.76103C5.26999 5.69842 5.22755 5.64289 5.17479 5.59831C5.12203 5.55372 5.0602 5.52113 4.9936 5.50281C4.92699 5.48449 4.8572 5.48086 4.78906 5.49219C3.70701 5.68681 2.70288 6.18595 1.89445 6.93104C1.08603 7.67613 0.506815 8.63629 0.224752 9.69891C-0.05731 10.7615 -0.0305282 11.8826 0.301957 12.9305C0.634441 13.9784 1.25884 14.9098 2.10193 15.6155C2.94502 16.3211 3.97183 16.7717 5.06194 16.9144C6.15206 17.0572 7.26027 16.8861 8.25661 16.4213C9.25294 15.9565 10.0961 15.2173 10.6872 14.2903C11.2782 13.3633 11.5927 12.2869 11.5937 11.1875V8.13281C12.7852 8.80666 14.1312 9.15934 15.5 9.15625C15.6243 9.15625 15.7435 9.10686 15.8315 9.01896C15.9194 8.93105 15.9687 8.81182 15.9687 8.6875V5.5625C15.9687 5.43818 15.9194 5.31895 15.8315 5.23104C15.7435 5.14314 15.6243 5.09375 15.5 5.09375ZM15.0312 8.20312C13.7214 8.1198 12.462 7.66748 11.3984 6.89844C11.329 6.84828 11.2471 6.81812 11.1617 6.81124C11.0763 6.80435 10.9907 6.821 10.9141 6.85938C10.8372 6.90006 10.7726 6.96071 10.7273 7.03494C10.6819 7.10918 10.6574 7.19426 10.6562 7.28125V11.1875C10.6552 12.0846 10.4051 12.9638 9.93374 13.7271C9.46238 14.4903 8.78831 15.1077 7.98666 15.5104C7.18502 15.9131 6.2873 16.0852 5.39357 16.0076C4.49984 15.93 3.64521 15.6057 2.92495 15.071C2.20469 14.5362 1.6471 13.8119 1.31433 12.9788C0.981557 12.1457 0.88668 11.2365 1.04027 10.3527C1.19387 9.46884 1.58989 8.64502 2.18421 7.97303C2.77853 7.30105 3.54779 6.80732 4.40625 6.54688V8.9375C4.01383 9.18238 3.69217 9.52549 3.47309 9.93287C3.254 10.3403 3.1451 10.7978 3.15715 11.2602C3.1692 11.7226 3.30179 12.1738 3.5418 12.5692C3.78181 12.9646 4.12091 13.2905 4.52555 13.5146C4.93018 13.7387 5.38633 13.8533 5.84884 13.847C6.31135 13.8406 6.76419 13.7136 7.16255 13.4786C7.5609 13.2435 7.89096 12.9084 8.12006 12.5066C8.34916 12.1047 8.46935 11.6501 8.46875 11.1875V1.65625H10.6797C10.7885 2.77345 11.2819 3.81819 12.0756 4.61191C12.8693 5.40562 13.914 5.89904 15.0312 6.00781V8.20312Z"
        fill={fill}
      />
    </svg>
  )
}

export const EmailInbox: React.FC<SVGProps> = ({ size = 20, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M6.05 14H17.45C17.5167 14 17.5833 13.9667 17.65 13.9C17.7167 13.8333 17.75 13.7667 17.75 13.7V10.8H15C14.7 11.4333 14.2583 11.925 13.675 12.275C13.0917 12.625 12.45 12.8 11.75 12.8C11.0667 12.8 10.4293 12.625 9.838 12.275C9.246 11.925 8.8 11.4333 8.5 10.8H5.75V13.7C5.75 13.7667 5.78333 13.8333 5.85 13.9C5.91667 13.9667 5.98333 14 6.05 14ZM11.75 11.3C12.3333 11.3 12.8333 11.1083 13.25 10.725C13.6667 10.3417 13.875 9.86667 13.875 9.3H17.75V2.3C17.75 2.23333 17.7167 2.16667 17.65 2.1C17.5833 2.03333 17.5167 2 17.45 2H6.05C5.98333 2 5.91667 2.03333 5.85 2.1C5.78333 2.16667 5.75 2.23333 5.75 2.3V9.3H9.625C9.625 9.86667 9.83333 10.3417 10.25 10.725C10.6667 11.1083 11.1667 11.3 11.75 11.3ZM6.05 15.5C5.55 15.5 5.125 15.325 4.775 14.975C4.425 14.625 4.25 14.2 4.25 13.7V2.3C4.25 1.8 4.425 1.375 4.775 1.025C5.125 0.675 5.55 0.5 6.05 0.5H17.45C17.95 0.5 18.375 0.675 18.725 1.025C19.075 1.375 19.25 1.8 19.25 2.3V13.7C19.25 14.2 19.075 14.625 18.725 14.975C18.375 15.325 17.95 15.5 17.45 15.5H6.05ZM2.55 19C2.05 19 1.625 18.825 1.275 18.475C0.925 18.125 0.75 17.7 0.75 17.2V4.3H2.25V17.2C2.25 17.2667 2.28333 17.3333 2.35 17.4C2.41667 17.4667 2.48333 17.5 2.55 17.5H15.45V19H2.55ZM6.05 14H5.75H17.75H17.45H6.05Z"
        fill={fill}
      />
    </svg>
  )
}

export const PreviewList: React.FC<SVGProps> = ({ size = 18, fill = 'currentColor' }) => {
  return (
    <svg
      fill="none"
      stroke={fill}
      strokeWidth="1.5"
      fillRule="evenodd"
      strokeLinecap="round"
      strokeLinejoin="round"
      width={size}
      height={size}
      viewBox="0 0 20 16"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg">
      <rect x="9.77777778" y="0" width="6.22222222" height="6.22222222"></rect>{' '}
      <rect x="9.77777778" y="9.77777778" width="6.22222222" height="6.22222222"></rect>{' '}
      <line x1="0" y1="2" x2="6" y2="2"></line> <line x1="0" y1="8" x2="6" y2="8"></line>{' '}
      <line x1="0" y1="14" x2="6" y2="14"></line>
    </svg>
  )
}

export const Folder: React.FC<SVGProps> = ({ size = 52, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} viewBox="0 0 53 39" version="1.1" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M48.03125,6.5 L29.790833,6.5 C28.7431613,6.5 27.7373076,6.08896217 26.9894703,5.35523504 L22.6980297,1.14476496 C21.9501924,0.41103783 20.9443387,-6.36543387e-16 19.896667,0 L4.96875,0 L4.96875,0 C2.22455078,0 0,2.18257812 0,4.875 L0,34.125 C0,36.8174219 2.22455078,39 4.96875,39 L48.03125,39 C50.7754492,39 53,36.8174219 53,34.125 L53,11.375 C53,8.68257813 50.7754492,6.5 48.03125,6.5 Z"
        stroke="none"
        strokeWidth="0"
        style={{
          fill,
          stroke: fill
        }}></path>
      <path
        d="M48.03125,6.5 L29.790833,6.5 C28.7431613,6.5 27.7373076,6.08896217 26.9894703,5.35523504 L22.6980297,1.14476496 C21.9501924,0.41103783 20.9443387,-6.36543387e-16 19.896667,0 L4.96875,0 L4.96875,0 C2.22455078,0 0,2.18257812 0,4.875 L0,34.125 C0,36.8174219 2.22455078,39 4.96875,39 L48.03125,39 C50.7754492,39 53,36.8174219 53,34.125 L53,11.375 C53,8.68257813 50.7754492,6.5 48.03125,6.5 Z"
        fill="black"
        fillOpacity="0.2"
        stroke="none"
        strokeWidth="0"></path>
      <path
        d="M48.03125,12.75 C49.0609313,12.75 49.9941504,13.1577174 50.6692739,13.8201027 C51.3356976,14.4739525 51.75,15.3766531 51.75,16.375 L51.75,16.375 L51.75,34.125 C51.75,35.1233469 51.3356976,36.0260475 50.6692739,36.6798973 C49.9941504,37.3422826 49.0609313,37.75 48.03125,37.75 L48.03125,37.75 L4.96875,37.75 C3.93906868,37.75 3.00584961,37.3422826 2.33072613,36.6798973 C1.66430239,36.0260475 1.25,35.1233469 1.25,34.125 L1.25,34.125 L1.25,16.375 C1.25,15.3766531 1.66430239,14.4739525 2.33072613,13.8201027 C3.00584961,13.1577174 3.93906868,12.75 4.96875,12.75 L4.96875,12.75 Z"
        strokeWidth="2"
        fill="green"
        style={{
          fill,
          stroke: fill
        }}></path>
    </svg>
  )
}

export const FolderVertical: React.FC<SVGProps> = ({ size = 52, fill = 'currentColor' }) => {
  return (
    <svg width={size} height={size} fill={fill} viewBox="0 0 38 51" version="1.1" xmlns="http://www.w3.org/2000/svg">
      <path d="M22.1666667,13.546875 L22.1666667,0 L2.375,0 C1.05885417,0 0,1.06582031 0,2.390625 L0,48.609375 C0,49.9341797 1.05885417,51 2.375,51 L35.625,51 C36.9411458,51 38,49.9341797 38,48.609375 L38,15.9375 L24.5416667,15.9375 C23.2354167,15.9375 22.1666667,14.8617187 22.1666667,13.546875 Z M38,12.1423828 L38,12.75 L25.3333333,12.75 L25.3333333,0 L25.9369792,0 C26.5703125,0 27.1739583,0.249023438 27.6192708,0.697265625 L37.3072917,10.4589844 C37.7526042,10.9072266 38,11.5148437 38,12.1423828 Z"></path>
    </svg>
  )
}

export const Alphabet: React.FC<SVGProps> = ({ size = 17, fill = 'currentColor' }) => {
  return (
    <svg
      fill="none"
      stroke={fill}
      strokeWidth="2"
      fillRule="evenodd"
      strokeLinecap="round"
      strokeLinejoin="round"
      width={size}
      height={size}
      viewBox="-2 0 15 15"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg">
      <polyline
        id="Path"
        points="11.1999993 13.1999991 5.59999967 0.199999094 0 13.1999991 5.59999967 0.199999094"></polyline>
      <line x1="2.25" y1="8" x2="8.75" y2="8" id="Line-2"></line>
    </svg>
  )
}

export const Loading: React.FC<SVGProps> = ({ size = 24, fill = 'currentColor' }) => {
  return (
    <svg
      className="animate-spin"
      width={size}
      height={size}
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24">
      <circle className="opacity-25" cx="12" cy="12" r="10" stroke={fill} strokeWidth="4"></circle>
      <path
        className="opacity-75"
        fill={fill}
        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>
  )
}
